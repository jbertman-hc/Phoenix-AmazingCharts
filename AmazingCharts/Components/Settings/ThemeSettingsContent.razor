@using AmazingCharts.Services
@using AmazingCharts.Components.Shared
@using MudBlazor
@inject ThemeService ThemeService
@inject ISnackbar Snackbar

<div class="theme-settings">
    <MudText Typo="Typo.h5" Class="mb-4">Theme Settings</MudText>

    <!-- Appearance Card -->
    <MudCard Elevation="0" Class="mb-4">
        <MudCardHeader>
            <MudText Typo="Typo.h6">Appearance</MudText>
        </MudCardHeader>

        <MudCardContent>
            <MudSwitch @bind-Checked="@ThemeService.IsDarkMode" Color="Color.Primary" Label="Dark Mode" />

            <MudText Typo="Typo.subtitle1" Class="mt-4 mb-2">Preview</MudText>

            <MudPaper Elevation="0" Class="d-flex flex-wrap gap-4 py-4">
                <MudButton Variant="Variant.Filled" Color="Color.Primary">Primary</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Secondary">Secondary</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Tertiary">Tertiary</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Info">Info</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Success">Success</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Warning">Warning</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Error">Error</MudButton>
            </MudPaper>
        </MudCardContent>
    </MudCard>

    <!-- UI Components Card -->
    <MudCard Elevation="0" Class="mb-4">
        <MudCardHeader>
            <MudText Typo="Typo.h6">UI Components</MudText>
        </MudCardHeader>

        <MudCardContent>
            <MudPaper Elevation="0" Class="d-flex flex-column gap-4">
                <MudTextField T="string" Label="Text Field" Variant="Variant.Outlined" />
                
                <MudSelect T="string" Label="Select" Variant="Variant.Outlined">
                    <MudSelectItem Value="@("Option 1")">Option 1</MudSelectItem>
                    <MudSelectItem Value="@("Option 2")">Option 2</MudSelectItem>
                    <MudSelectItem Value="@("Option 3")">Option 3</MudSelectItem>
                </MudSelect>
                
                <MudCheckBox T="bool" Label="Checkbox" Color="Color.Primary" />
                
                <MudRadioGroup T="string">
                    <MudRadio Option="@("Option 1")" Color="Color.Primary">Option 1</MudRadio>
                    <MudRadio Option="@("Option 2")" Color="Color.Primary">Option 2</MudRadio>
                </MudRadioGroup>
                
                <MudDatePicker Label="Date Picker" />
            </MudPaper>
        </MudCardContent>
    </MudCard>

    <!-- Color Palette Card -->
    <MudCard Elevation="0" Class="mb-4">
        <MudCardHeader>
            <MudText Typo="Typo.h6">Color Palette</MudText>
        </MudCardHeader>

        <MudCardContent>
            <MudGrid>
                <!-- Primary -->
                <MudItem xs="6" sm="4" md="3" lg="2">
                    <ColorSwatch Name="Primary" Color="@GetPaletteColor("Primary")" />
                </MudItem>

                <!-- Secondary -->
                <MudItem xs="6" sm="4" md="3" lg="2">
                    <ColorSwatch Name="Secondary" Color="@GetPaletteColor("Secondary")" />
                </MudItem>

                <!-- Tertiary -->
                <MudItem xs="6" sm="4" md="3" lg="2">
                    <ColorSwatch Name="Tertiary" Color="@GetPaletteColor("Tertiary")" />
                </MudItem>

                <!-- Info -->
                <MudItem xs="6" sm="4" md="3" lg="2">
                    <ColorSwatch Name="Info" Color="@GetPaletteColor("Info")" />
                </MudItem>

                <!-- Success -->
                <MudItem xs="6" sm="4" md="3" lg="2">
                    <ColorSwatch Name="Success" Color="@GetPaletteColor("Success")" />
                </MudItem>

                <!-- Warning -->
                <MudItem xs="6" sm="4" md="3" lg="2">
                    <ColorSwatch Name="Warning" Color="@GetPaletteColor("Warning")" />
                </MudItem>

                <!-- Error -->
                <MudItem xs="6" sm="4" md="3" lg="2">
                    <ColorSwatch Name="Error" Color="@GetPaletteColor("Error")" />
                </MudItem>

                <!-- Surface -->
                <MudItem xs="6" sm="4" md="3" lg="2">
                    <ColorSwatch Name="Surface" Color="@GetPaletteColor("Surface")" />
                </MudItem>

                <!-- Background -->
                <MudItem xs="6" sm="4" md="3" lg="2">
                    <ColorSwatch Name="Background" Color="@GetPaletteColor("Background")" />
                </MudItem>
            </MudGrid>
        </MudCardContent>
    </MudCard>

    <!-- Buttons -->
    <MudItem xs="12" Class="d-flex justify-end mt-4">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SaveThemeSettings" Class="mx-2">Save Settings</MudButton>
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="ResetThemeSettings" Class="mx-2">Reset to Default</MudButton>
    </MudItem>
</div>

@code {
    protected override void OnInitialized()
    {
        ThemeService.ThemeChanged += (sender, args) => StateHasChanged();
        base.OnInitialized();
    }

    private string GetPaletteColor(string propertyName)
    {
        var palette = ThemeService.CurrentTheme.Palette;
        var property = palette.GetType().GetProperty(propertyName);
        return property?.GetValue(palette)?.ToString() ?? "#000000";
    }

    private async Task SaveThemeSettings()
    {
        await ThemeService.SaveThemePreference();
        Snackbar.Add("Theme settings saved successfully", Severity.Success);
    }

    private void ResetThemeSettings()
    {
        ThemeService.SetTheme(false); // Reset to light mode
        Snackbar.Add("Theme settings reset to default", Severity.Info);
    }
}
